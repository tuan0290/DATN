#pragma checksum "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bcf54dc821bcfeff149cfa5d3f42dd5f380801cd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Administrator_Views_Report_BaoCaoThang), @"mvc.1.0.view", @"/Areas/Administrator/Views/Report/BaoCaoThang.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\_ViewImports.cshtml"
using Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\_ViewImports.cshtml"
using Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bcf54dc821bcfeff149cfa5d3f42dd5f380801cd", @"/Areas/Administrator/Views/Report/BaoCaoThang.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74b0619e1a302f0598271da1847e697c39d57b88", @"/Areas/Administrator/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Administrator_Views_Report_BaoCaoThang : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml"
  
    string filter = ViewBag.Filter != DateTime.MinValue ? ViewBag.Filter.ToString("MM-yyyy") : DateTime.Now.Date.ToString("MM-yyyy");
    string strFilter = ViewBag.Filter != DateTime.MinValue ? ViewBag.Filter.ToString("yyyy-MM") : DateTime.Now.Date.ToString("yyyy-MM");
    ViewData["Title"] = "Báo cáo tháng " + filter;
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n<div class=\"col-lg-12\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <input class=\"form-control\" id=\"ddlFilterData\" onchange=\"OnchangeData()\" type=\"month\"");
            BeginWriteAttribute("value", " value=\'", 645, "\'", 663, 1);
#nullable restore
#line 11 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml"
WriteAttributeValue("", 653, strFilter, 653, 10, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" onkeypress=""return false"" />
        </div>
    </div>
    <hr />
    <div class=""row"">
        <div class=""col-md-6"">
            <div class=""card"">
                <div class=""card-header border-0"">
                    <div class=""d-flex justify-content-between"">
                        <h3 class=""card-title"">THỐNG KÊ THEO THÁNG: <b>");
#nullable restore
#line 20 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml"
                                                                  Write(filter);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</b></h3>
                    </div>
                </div>
                <div class=""card-body"">
                    <div style=""height: 500px;"">
                        <canvas id=""chartNgay""></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-md-6"">
            <div class=""card"" style=""padding: 15px"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <div class=""card"">
                            <div class=""card-body"">
                                <h3 class=""card-title"">Tăng trưởng: <b><span id=""TT"">0</span> %</b></h3>
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <div class=""card"">
                            <div class=""card-body"">
                                <h3 class=""card-title"">Doanh thu tháng này: <b><span id=""crDT"">0</span></b></h3>
    ");
            WriteLiteral(@"                        </div>
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <div class=""card"">
                            <div class=""card-body"">
                                <h3 class=""card-title"">Doanh thu tháng trước: <b><span id=""prDT"">0</span></b></h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
</div>

<script>
    function OnchangeData() {
        var val = new Date($('#ddlFilterData').val()).toISOString().substring(0, 10);
        window.location.href = """);
#nullable restore
#line 64 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml"
                           Write(Url.Action("BaoCaoThang", "Report"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?ngay="" + val;
    }
</script>
<script>
        function moneyFormat(price, sign = ' đ') {
            const pieces = parseFloat(price).toFixed(1).split('')
            let ii = pieces.length - 3
            while ((ii -= 3) > 0) {
                pieces.splice(ii, 0, ',')
            }
            return pieces.join('') + sign
        }
        function SetChartNgay() {
            var DonHangMoi = 0;
            var DonHangThanhCong = 0;
            var DonHangThatBai = 0;
            var DonHangHuy = 0;
            var ctx = document.getElementById('chartNgay').getContext('2d');
            //get data chart
            $.ajax({
                type: ""GET"",
                url: '");
#nullable restore
#line 85 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml"
                 Write(Url.Action("GetDataBaoCaoThang", "Report"));

#line default
#line hidden
#nullable disable
            WriteLiteral("?ngay=");
#nullable restore
#line 85 "D:\DevOps\DATN\TuNgaComputer_DA\Web\Areas\Administrator\Views\Report\BaoCaoThang.cshtml"
                                                                  Write(filter);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                dataType: 'json',
                success: function (res) {
                    $(""#totalDoanhThu"").text(moneyFormat(res.DoanhThu))
                    DonHangMoi = res.DonHangMoi;
                    DonHangThanhCong = res.DonHangThanhCong;
                    DonHangThatBai = res.DonHangThatBai;
                    DonHangHuy = res.DonHangHuy;
                    if(res.TangTruong > 0) {
                        $(""#TT"").css({color: ""green""});
                    }
                    else{
                        $(""#TT"").css({color: ""red""});
                    }
                    $(""#TT"").text(res.TangTruong || 0)
                    $(""#crDT"").text(moneyFormat(res.DoanhThu) || 0)
                    $(""#prDT"").text(moneyFormat(res.DoanhThuPrev) || 0)
                    console.log(res);
                }
            }).done(function () {

                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
              ");
            WriteLiteral(@"          labels: ['Đ.Hàng Mới', 'Đ.Hàng Thành Công', 'Đ.Hàng Thất Bại', 'Đ.Hàng Hủy'],
                        datasets: [{
                            label: 'Đ.Hàng Mới',
                            data: [DonHangMoi, DonHangThanhCong, DonHangThatBai, DonHangHuy],
                            backgroundColor: [
                                'rgba(0, 104, 184, 1)',
                                '#28a745',
                                '#ffc107',
                                'rgba(66, 66, 66, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                });
            });
        }
        SetChartNgay();
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
